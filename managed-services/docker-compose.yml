---
# Boundless Spatial, Inc.
# Managed Boundless Exchange dev environment
# 
# *Prerequisites*
# docker
# docker-compose
# sysctl -w vm.max_map_count=26214
# hosts entries for "exchange" and "geoserver" matching docker host IP
# 
# *Installation*
# docker-compose up
# 
# *URLS*
# http://exchange/
# http://exchange/geoserver
version: '2.2'
services:
  nginx:
    container_name: nginx
    image: quay.io/boundlessgeo/ops-bex-nginx:latest
    healthcheck:
      test: ["CMD-SHELL", "curl -k --silent --fail https://localhost"]
      interval: 60s
      timeout: 15s
      retries: 10
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - exchange
  exchange:
    container_name: exchange
    image: quay.io/boundlessgeo/ops-bex-exchange:1.4.x
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:8000 || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
    ports:
      - 8000:8000
    depends_on:
      - db
      - geoserver
      - search
      - task_queue
    environment:
      ALLOWED_HOSTS: "*"
      ANYWHERE_ENABLED: "True"
      AUDIT_ENABLED: "True"
      AUDIT_LOGFILE_LOCATION: /var/log/exchange_audit_log.json
      AUDIT_TO_FILE: "True"
      BROKER_URL: "amqp://guest:guest@queue:5672/"
      CASTLING_DEV: "False"
      CASTLING_ENABLED: "false"
      DATABASE_URL: "postgres://exchange:boundless@db:5432/exchange?currentSchema=django,public"
      DEBUG_STATIC: "False"
      DEBUG: "False"
      DEFAULT_ANONYMOUS_DOWNLOAD_PERMISSION: "False"
      DEFAULT_ANONYMOUS_VIEW_PERMISSION: "False"
      DEV: "False"
      DJANGO_LOG_LEVEL: "ERROR"
      ENABLE_SOCIAL_LOGIN: "False"
      ES_SEARCH: "True"
      ES_URL: "http://search:9200/"
      GEOSERVER_LOCAL_URL: "http://geoserver:8080/geoserver/"
      GEOSERVER_PASSWORD: "password"
      GEOSERVER_REDIRECT: "http://exchange/"
      GEOSERVER_URL: "http://geoserver:8080/geoserver/"
      GEOSERVER_USER: "admin"
      LOCKDOWN_GEONODE: "False"
      MEDIA_ROOT: "/app/data/media"
      MEDIA_URL: "/media/"
      MODIFY_TOPICCATEGORY: "True"
      OAUTH_AUTH0_ADMIN_ROLES: ""
      OAUTH_AUTH0_ALLOWED_ROLES: ""
      OAUTH_AUTH0_HOST: ""
      OAUTH_AUTH0_KEY: ""
      OAUTH_AUTH0_MOBILE_KEY: ""
      OAUTH_AUTH0_OIDC_CONFORMANT: "true"
      OAUTH_AUTH0_SECRET: ""
      OSGEO_IMPORTER_UPLOAD_RASTER_TO_GEOSERVER: "false"
      POSTGIS_URL: "postgis://exchange:boundless@db:5432/exchange_data?currentSchema=data,public"
      PROXY_ALLOWED_HOSTS: "*"
      SITEURL: "http://exchange/"
      STATIC_ROOT: "/tmp/static"
      STATIC_URL: "/static/"
  geoserver:
    container_name: geoserver
    image: quay.io/boundlessgeo/ops-bex-geoserver:1.4.x-offline
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:8080/geoserver/web/ || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
    ports:
      - '8080:8080'
    depends_on:
      - db
    environment:
      JAVA_OPTS: "-Xmx512m -DGEOSERVER_DATA_DIR=/geoserver-data/config -DGEOGIG_DATASTORE_DIR=/geoserver-data/config/geogig -DGEOWEBCACHE_CACHE_DIR=/geoserver-data/gwc -Dgeofence.dir=/geoserver-data/config/geofence -Dgeofence-ovr=file:/geoserver-data/config/geofence/geofence-datasource-ovr.properties -Dorg.geoserver.rest.DefaultUserGroupServiceName=geonode-oauth2 -Dgwc.context.suffix=gwc -Dsun.java2d.renderer=org.marlin.pisces.MarlinRenderingEngine -Xbootclasspath/a:/opt/marlin-unsafe.jar -Xbootclasspath/p:/opt/marlin-unsafe-sun-java2d.jar -Ddb.exchange_data.dbname=bex_data -Ddb.exchange_data.username=exchange-Ddb.exchange_data.password=boundless -Ddb.exchange_data.host=postgres"
  db:
    container_name: db
    image: quay.io/boundlessgeo/ops-bex-db:latest
    mem_limit: 1024m
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
    environment:
      ALLOW_IP_RANGE: '0.0.0.0/0'
      POSTGRES_USER: 'root'
      DB_USER: 'exchange'
      DB_PASS: 'boundless'
  task_queue:
    container_name: queue
    image: quay.io/boundlessgeo/ops-bex-taskqueue:1.4.x
    ports:
      - 5672:5672
      - 15672:15672  # rabbitmq management plugin
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
    volumes:
      - search_data:/var/lib/rabbitmq
  search:
    container_name: search
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    ulimits:
      memlock:
        soft: -1
        hard: -1
      core:
        soft: -1
        hard: -1
      fsize:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
    volumes:
      - queue_data:/usr/share/elasticsearch/data/elasticsearch
volumes:  # volumes with no displayed path/relationship to the host
  search_data:
  queue_data:
